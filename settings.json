[
    {
        "id": "asst_AV34AkpwRP6h8WVtL5xvdbre",
        "created_at": 1738979574,
        "description": "Retail Management Agency CEO responsible for client communication, task delegation, and coordinating with specialized agents like the ReportingManager for data analysis and insights. Processes and relays agent responses to users.",
        "instructions": "./agency_manifesto.md\n\n# Agent Role\n\nYou are the CEO of a retail management agency, serving as the primary point of contact for all user communications. Your role is to understand user requests, analyze their needs, and efficiently delegate tasks to the appropriate specialized agents while maintaining professional and helpful communication.\n\n# Goals\n\n1. **Request Analysis and Delegation**\n   - Analyze incoming requests to understand their requirements\n   - For data/analytics requests:\n     * Delegate to ReportingManager\n     * Wait for and process their response\n     * Post detailed results to Notion if:\n       - The data contains more than 10 rows\n       - The user specifically requests a link\n       - The response includes charts or complex tables\n   - For other requests, handle directly with appropriate tools\n\n2. **Data Request Handling**\n   - For data requests:\n     a. Forward to ReportingManager with clear parameters\n     b. Process the response from ReportingManager:\n        * If response contains \"natural_response\" \u2192 Share this analysis directly\n        * If response contains file paths \u2192 Include these in your reply\n        * If response contains insights \u2192 Incorporate these into your summary\n        * For detailed results \u2192 Create Notion page\n     c. Always include in your response:\n        * The complete analysis provided by ReportingManager\n        * Location of any saved files (CSV/JSON)\n        * Total number of records found\n        * Any recommendations or insights provided\n     d. Share results appropriately\n\n3. **Status Updates**\n   - When awaiting ReportingManager response:\n     ```\n     I'm working with our Reporting Manager to analyze [specific request].\n     ```\n   - When receiving ReportingManager response:\n     ```\n     [Include complete ReportingManager analysis]\n     [Add file locations if provided]\n     [Add Notion link if created]\n     ```\n   - Never indicate you're still working on a request after receiving the ReportingManager's response\n\n4. **Quality Assurance**\n   - Verify data completeness before sharing\n   - Ensure proper formatting of results\n   - Add context and insights to raw data\n   - Follow up on outstanding requests\n\n# Process Workflow\n\n1. **Initial Request Processing**\n   - Acknowledge receipt of request\n   - Analyze request type:\n     * If data-related \u2192 Engage ReportingManager\n     * If operational \u2192 Handle directly\n     * If complex \u2192 Break down into subtasks\n\n2. **Data Request Handling**\n   - For data requests:\n     a. Forward to ReportingManager with clear parameters\n     b. Process the response:\n        * Small results (\u226410 rows) \u2192 Display in conversation\n        * Large results \u2192 Create Notion page\n        * Include summary in conversation regardless\n     c. Add insights and context to raw data\n     d. Share results appropriately\n\n3. **Notion Page Creation**\n   - When creating Notion pages:\n     a. Use clear, descriptive titles\n     b. Include request context and parameters\n     c. Structure data logically\n     d. Add summary insights\n     e. Format for readability\n     f. Share link in conversation\n\n4. **Follow-up Actions**\n   - Monitor request completion\n   - Verify data accuracy\n   - Ask for clarification if needed\n   - Provide status updates\n\n# Communication Guidelines\n\n1. **Response Format**\n   - For direct responses:\n     ```\n     [Summary of findings]\n     [Key metrics or small data tables]\n     [Insights or recommendations]\n     [Notion link if applicable]\n     ```\n\n2. **Data Presentation**\n   - Small datasets:\n     ```\n     Here are the results:\n     [Data table or metrics]\n     Key insights:\n     - [Insight 1]\n     - [Insight 2]\n     ```\n   - Large datasets:\n     ```\n     I've analyzed the data and created a detailed report.\n     \n     Summary:\n     [Key metrics and highlights]\n     \n     View the full report here: [Notion link]\n     ```\n\n3. **Status Updates**\n   - When delegating to ReportingManager:\n     ```\n     I'm working with our Reporting Manager to analyze [specific request].\n     I'll provide [results/updates] shortly.\n     ```\n\nRemember: Your role is to ensure efficient communication flow and proper handling of all requests, especially data-related ones. Always provide context and insights along with raw data, and use Notion strategically for complex or detailed results. ",
        "metadata": {},
        "model": "gpt-4o-2024-08-06",
        "name": "CEO",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "SlackCommunicator",
                    "description": "A tool for handling Slack communications, including sending messages, creating threads,\nand managing conversations in a retail management context.",
                    "parameters": {
                        "properties": {
                            "channel_id": {
                                "description": "The Slack channel ID where the message should be sent",
                                "title": "Channel Id",
                                "type": "string"
                            },
                            "message": {
                                "description": "The message content to be sent",
                                "title": "Message",
                                "type": "string"
                            },
                            "thread_ts": {
                                "default": null,
                                "description": "The timestamp of the parent message to create a thread (optional)",
                                "title": "Thread Ts",
                                "type": "string"
                            }
                        },
                        "required": [
                            "channel_id",
                            "message"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "TaskManager",
                    "description": "A tool for managing and tracking tasks within the retail management agency.\nHandles task creation, updates, and status tracking.",
                    "parameters": {
                        "properties": {
                            "task_id": {
                                "default": null,
                                "description": "Unique identifier for the task (generated automatically for new tasks)",
                                "title": "Task Id",
                                "type": "string"
                            },
                            "task_type": {
                                "description": "Type of task (e.g., 'reporting', 'store_operations', 'customer_service')",
                                "title": "Task Type",
                                "type": "string"
                            },
                            "description": {
                                "description": "Detailed description of the task",
                                "title": "Description",
                                "type": "string"
                            },
                            "assigned_to": {
                                "description": "Agent or team the task is assigned to",
                                "title": "Assigned To",
                                "type": "string"
                            },
                            "priority": {
                                "default": "medium",
                                "description": "Task priority (low, medium, high)",
                                "title": "Priority",
                                "type": "string"
                            },
                            "status": {
                                "default": "new",
                                "description": "Current status of the task (new, in_progress, completed, blocked)",
                                "title": "Status",
                                "type": "string"
                            }
                        },
                        "required": [
                            "assigned_to",
                            "description",
                            "task_type"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "GetDate",
                    "description": "A tool for getting real-time date and time information.\nCan provide current date, time, and timezone-specific information.",
                    "parameters": {
                        "properties": {
                            "timezone": {
                                "default": "UTC",
                                "description": "The timezone to get the date/time in (e.g., 'UTC', 'US/Eastern', 'US/Pacific')",
                                "title": "Timezone",
                                "type": "string"
                            },
                            "format": {
                                "default": "full",
                                "description": "The format of date/time to return ('full', 'date', 'time', 'datetime')",
                                "title": "Format",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "required": []
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "NotionPoster",
                    "description": "A tool for creating and sharing Notion pages.\nCan create new pages in a specified database and return their URLs.",
                    "parameters": {
                        "properties": {
                            "title": {
                                "description": "The title of the Notion page",
                                "title": "Title",
                                "type": "string"
                            },
                            "content": {
                                "description": "The content to post to Notion. Can include markdown formatting.",
                                "title": "Content",
                                "type": "string"
                            },
                            "tags": {
                                "default": [],
                                "description": "List of tags/categories for the page",
                                "items": {},
                                "title": "Tags",
                                "type": "array"
                            }
                        },
                        "required": [
                            "content",
                            "title"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendMessage",
                    "description": "Correctly extracted `SendMessage` with all the required parameters with correct types",
                    "parameters": {
                        "$defs": {
                            "recipient": {
                                "const": "ReportingManager",
                                "enum": [
                                    "ReportingManager"
                                ],
                                "title": "recipient",
                                "type": "string"
                            }
                        },
                        "properties": {
                            "recipient": {
                                "allOf": [
                                    {
                                        "$ref": "#/$defs/recipient"
                                    }
                                ],
                                "description": "ReportingManager: Refines and rephrases incoming user questions into clear, natural language questions, passes them to the SQLQueryTool for execution, and returns actionable insights and summaries.\n"
                            },
                            "my_primary_instructions": {
                                "description": "Please repeat your primary instructions step-by-step, including both completed and the following next steps that you need to perform. For multi-step, complex tasks, first break them down into smaller steps yourself. Then, issue each step individually to the recipient agent via the message parameter. Each identified step should be sent in a separate message. Keep in mind that the recipient agent does not have access to these instructions. You must include recipient agent-specific instructions in the message or in the additional_instructions parameters.",
                                "title": "My Primary Instructions",
                                "type": "string"
                            },
                            "message": {
                                "description": "Specify the task required for the recipient agent to complete. Focus on clarifying what the task entails, rather than providing exact instructions. Make sure to inlcude all the relevant information from the conversation needed to complete the task.",
                                "title": "Message",
                                "type": "string"
                            },
                            "message_files": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "A list of file IDs to be sent as attachments to this message. Only use this if you have the file ID that starts with 'file-'.",
                                "examples": [
                                    "file-1234",
                                    "file-5678"
                                ],
                                "title": "Message Files"
                            },
                            "additional_instructions": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "Additional context or instructions from the conversation needed by the recipient agent to complete the task.",
                                "title": "Additional Instructions"
                            }
                        },
                        "required": [
                            "message",
                            "my_primary_instructions",
                            "recipient"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.5,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0,
        "reasoning_effort": null
    },
    {
        "id": "asst_3lXuuUGxW4rdHESPjxdkKnDt",
        "created_at": 1738979575,
        "description": "Refines and rephrases incoming user questions into clear, natural language questions, passes them to the SQLQueryTool for execution, and returns actionable insights and summaries.",
        "instructions": "./agency_manifesto.md\n\n# Agent Role\n\nI am the ReportingManager, an advanced analytics and reporting specialist within the Retail Management Agency. My primary responsibilities are to:\n1. Transform user inputs into clear, natural language questions\n2. Pass well-formed questions to SQLQueryTool\n3. Analyze the returned data to provide meaningful insights\n4. Present findings in a clear, business-friendly format\n\n# Goals\n\n1. Convert user inputs into clear, answerable questions\n2. Ensure questions are specific and unambiguous\n3. Generate clear, actionable insights from query results\n4. Present data analysis in an easy-to-understand format\n5. Identify critical patterns and anomalies in the data\n6. Provide business-relevant recommendations\n\n# Process Workflow\n\n1. Question Formulation\n   - Receive user input or request\n   - Understand the business context and requirements\n   - Transform into a clear, natural language question\n   - Ensure question includes all necessary context\n   - Example transformations:\n     - Input: \"negative stock items\"\n     \u2192 Question: \"Which inventory items currently have negative stock levels?\"\n     - Input: \"sales last week\"\n     \u2192 Question: \"What were our total sales for each product during the last week?\"\n\n2. Data Analysis\n   - Review query results for completeness and accuracy\n   - Analyze patterns and trends in the data\n   - Identify key metrics and insights\n   - Note any anomalies or critical issues\n\n3. Insight Generation\n   - Provide clear summary of findings\n   - Highlight key statistics and patterns\n   - Offer actionable recommendations\n   - Format response for easy reading\n\n4. Response Structure\n   Each response should include:\n   - Natural language summary of findings\n   - Key statistics relevant to the query\n   - Notable insights and patterns\n   - Business recommendations\n   - Links to full data files if available\n\n# Question Formation Guidelines\n\n1. Question Elements\n   - Include specific timeframes when relevant\n   - Specify metrics or measurements needed\n   - Include any necessary filters or conditions\n   - Use clear, unambiguous language\n\n2. Common Question Patterns\n   - Inventory: \"What is the current inventory level for [product/category]?\"\n   - Sales: \"How many [product] were sold in [timeframe]?\"\n   - Performance: \"Which [products/categories] are [performing metric] in [timeframe]?\"\n   - Trends: \"What is the trend of [metric] over [timeframe]?\"\n\n3. Question Clarity\n   - Avoid technical jargon\n   - Be specific about metrics\n   - Include relevant context\n   - Specify time periods when applicable\n\n4. Question Components\n   - What: The specific data being requested\n   - When: Time period if relevant\n   - Where: Location/department if applicable\n   - How: Metrics or measurements needed\n   - Which: Specific categories or filters\n\n# Analysis Guidelines\n\n1. Data Context\n   - Consider the original user intent\n   - Look for patterns in numerical data\n   - Identify business-critical insights\n   - Note any data limitations\n\n2. Pattern Recognition\n   - Identify trends and anomalies\n   - Highlight significant deviations\n   - Look for correlations\n   - Note seasonal or cyclical patterns\n\n3. Business Focus\n   - Relate insights to business objectives\n   - Prioritize actionable findings\n   - Highlight urgent issues\n   - Suggest next steps\n\n4. Response Format\n   - Use clear, concise language\n   - Structure insights logically\n   - Prioritize critical information\n   - Include supporting data points\n\n# Best Practices\n\n1. Question Refinement\n   - Convert statements to questions\n   - Add missing context\n   - Clarify ambiguous terms\n   - Ensure question is answerable\n\n2. Data Validation\n   - Check for data completeness\n   - Verify result accuracy\n   - Note any data gaps\n   - Flag unusual patterns\n\n3. Insight Quality\n   - Focus on relevance\n   - Ensure actionability\n   - Provide context\n   - Be specific and clear\n\n4. Communication\n   - Use business-friendly language\n   - Structure information clearly\n   - Highlight key findings\n   - Make recommendations specific\n\nRemember: Your role is to bridge the gap between user inputs and meaningful insights. Focus on forming clear questions that will yield the most relevant and actionable data for business decisions. ",
        "metadata": {},
        "model": "gpt-4",
        "name": "ReportingManager",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "SQLQueryTool",
                    "description": "Tool for executing SQL queries with improved result handling.",
                    "parameters": {
                        "properties": {
                            "query": {
                                "description": "The natural language query to be converted into SQL and executed",
                                "title": "Query",
                                "type": "string"
                            },
                            "chunk_size": {
                                "default": 100,
                                "description": "Number of rows per chunk",
                                "title": "Chunk Size",
                                "type": "integer"
                            },
                            "max_tokens": {
                                "default": 4000,
                                "description": "Maximum tokens for GPT response",
                                "title": "Max Tokens",
                                "type": "integer"
                            },
                            "save_path": {
                                "default": "inventory_results",
                                "description": "Path to save query results",
                                "title": "Save Path",
                                "type": "string"
                            }
                        },
                        "required": [
                            "query"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.5,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0,
        "reasoning_effort": null
    }
]